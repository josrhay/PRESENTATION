<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="MenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>